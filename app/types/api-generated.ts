/**
 * Generated by orval v7.10.0 üç∫
 * Do not edit manually.
 * admin and login API
 * OpenAPI spec version: 0.1.0
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  CategoriesListResponse,
  CategoryCreate,
  CategoryOut,
  DefinitionCreate,
  DefinitionListResponse,
  DefinitionOutIds,
  DefinitionUpdate,
  LevelCreate,
  LevelOut,
  LevelsListResponse,
  MeaningCreate,
  MeaningOut,
  MeaningUpdate,
  MeaningsListResponse,
  ReadCategoriesApiV1AdminCategoriesGetParams,
  ReadDefinitionsApiV1AdminDefinitionsGetParams,
  ReadLevelsApiV1AdminLevelsGetParams,
  ReadMeaningsApiV1AdminMeaningsGetParams,
  UserOut
} from './api';

export const getAdminAndLoginAPI = () => {
/**
 * @summary Read Users
 */
const readUsersApiV1AdminUsersGet = <TData = AxiosResponse<UserOut[]>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/admin/users`,options
    );
  }

/**
 * @summary Read User
 */
const readUserApiV1AdminCurrentUserGet = <TData = AxiosResponse<UserOut>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/admin/current_user`,options
    );
  }

/**
 * @summary Add Category
 */
const addCategoryApiV1AdminCategoriesPost = <TData = AxiosResponse<CategoryOut>>(
    categoryCreate: CategoryCreate, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/v1/admin/categories`,
      categoryCreate,options
    );
  }

/**
 * @summary Read Categories
 */
const readCategoriesApiV1AdminCategoriesGet = <TData = AxiosResponse<CategoriesListResponse>>(
    params?: ReadCategoriesApiV1AdminCategoriesGetParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/admin/categories`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * @summary Add Level
 */
const addLevelApiV1AdminLevelsPost = <TData = AxiosResponse<LevelOut>>(
    levelCreate: LevelCreate, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/v1/admin/levels`,
      levelCreate,options
    );
  }

/**
 * @summary Read Levels
 */
const readLevelsApiV1AdminLevelsGet = <TData = AxiosResponse<LevelsListResponse>>(
    params?: ReadLevelsApiV1AdminLevelsGetParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/admin/levels`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * @summary Delete Level Endpoint
 */
const deleteLevelEndpointApiV1AdminLevelsLevelIdDelete = <TData = AxiosResponse<unknown>>(
    levelId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/api/v1/admin/levels/${levelId}`,options
    );
  }

/**
 * @summary Read Meanings
 */
const readMeaningsApiV1AdminMeaningsGet = <TData = AxiosResponse<MeaningsListResponse>>(
    params?: ReadMeaningsApiV1AdminMeaningsGetParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/admin/meanings`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * @summary –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Å—É—â–Ω–æ—Å—Ç—å Meaning
 */
const addMeaningApiV1AdminMeaningsPost = <TData = AxiosResponse<MeaningOut>>(
    meaningCreate: MeaningCreate, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/v1/admin/meanings`,
      meaningCreate,options
    );
  }

/**
 * @summary Read Meaning
 */
const readMeaningApiV1AdminMeaningsMeaningIdGet = <TData = AxiosResponse<MeaningOut>>(
    meaningId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/admin/meanings/${meaningId}`,options
    );
  }

/**
 * @summary Update Meaning Endpoint
 */
const updateMeaningEndpointApiV1AdminMeaningsMeaningIdPatch = <TData = AxiosResponse<MeaningOut>>(
    meaningId: number,
    meaningUpdate: MeaningUpdate, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/api/v1/admin/meanings/${meaningId}`,
      meaningUpdate,options
    );
  }

/**
 * @summary Delete Meaning Endpoint
 */
const deleteMeaningEndpointApiV1AdminMeaningsMeaningIdDelete = <TData = AxiosResponse<unknown>>(
    meaningId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/api/v1/admin/meanings/${meaningId}`,options
    );
  }

/**
 * @summary Read Definitions
 */
const readDefinitionsApiV1AdminDefinitionsGet = <TData = AxiosResponse<DefinitionListResponse>>(
    params?: ReadDefinitionsApiV1AdminDefinitionsGetParams, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/admin/definitions`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }

/**
 * @summary Add Definition
 */
const addDefinitionApiV1AdminDefinitionsPost = <TData = AxiosResponse<DefinitionOutIds>>(
    definitionCreate: DefinitionCreate, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/api/v1/admin/definitions`,
      definitionCreate,options
    );
  }

/**
 * @summary Read Definition
 */
const readDefinitionApiV1AdminDefinitionsDefinitionIdGet = <TData = AxiosResponse<DefinitionOutIds>>(
    definitionId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/admin/definitions/${definitionId}`,options
    );
  }

/**
 * @summary Patch Definition
 */
const patchDefinitionApiV1AdminDefinitionsDefinitionIdPatch = <TData = AxiosResponse<DefinitionOutIds>>(
    definitionId: number,
    definitionUpdate: DefinitionUpdate, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.patch(
      `/api/v1/admin/definitions/${definitionId}`,
      definitionUpdate,options
    );
  }

/**
 * @summary Delete Definition Endpoint
 */
const deleteDefinitionEndpointApiV1AdminDefinitionsDefinitionIdDelete = <TData = AxiosResponse<unknown>>(
    definitionId: number, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/api/v1/admin/definitions/${definitionId}`,options
    );
  }

/**
 * @summary Login
 */
const loginApiV1AuthGoogleLoginGet = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/auth/google/login`,options
    );
  }

/**
 * @summary Auth Callback
 */
const authCallbackApiV1AuthGoogleCallbackGet = <TData = AxiosResponse<unknown>>(
     options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/api/v1/auth/google/callback`,options
    );
  }

return {readUsersApiV1AdminUsersGet,readUserApiV1AdminCurrentUserGet,addCategoryApiV1AdminCategoriesPost,readCategoriesApiV1AdminCategoriesGet,addLevelApiV1AdminLevelsPost,readLevelsApiV1AdminLevelsGet,deleteLevelEndpointApiV1AdminLevelsLevelIdDelete,readMeaningsApiV1AdminMeaningsGet,addMeaningApiV1AdminMeaningsPost,readMeaningApiV1AdminMeaningsMeaningIdGet,updateMeaningEndpointApiV1AdminMeaningsMeaningIdPatch,deleteMeaningEndpointApiV1AdminMeaningsMeaningIdDelete,readDefinitionsApiV1AdminDefinitionsGet,addDefinitionApiV1AdminDefinitionsPost,readDefinitionApiV1AdminDefinitionsDefinitionIdGet,patchDefinitionApiV1AdminDefinitionsDefinitionIdPatch,deleteDefinitionEndpointApiV1AdminDefinitionsDefinitionIdDelete,loginApiV1AuthGoogleLoginGet,authCallbackApiV1AuthGoogleCallbackGet}};
export type ReadUsersApiV1AdminUsersGetResult = AxiosResponse<UserOut[]>
export type ReadUserApiV1AdminCurrentUserGetResult = AxiosResponse<UserOut>
export type AddCategoryApiV1AdminCategoriesPostResult = AxiosResponse<CategoryOut>
export type ReadCategoriesApiV1AdminCategoriesGetResult = AxiosResponse<CategoriesListResponse>
export type AddLevelApiV1AdminLevelsPostResult = AxiosResponse<LevelOut>
export type ReadLevelsApiV1AdminLevelsGetResult = AxiosResponse<LevelsListResponse>
export type DeleteLevelEndpointApiV1AdminLevelsLevelIdDeleteResult = AxiosResponse<unknown>
export type ReadMeaningsApiV1AdminMeaningsGetResult = AxiosResponse<MeaningsListResponse>
export type AddMeaningApiV1AdminMeaningsPostResult = AxiosResponse<MeaningOut>
export type ReadMeaningApiV1AdminMeaningsMeaningIdGetResult = AxiosResponse<MeaningOut>
export type UpdateMeaningEndpointApiV1AdminMeaningsMeaningIdPatchResult = AxiosResponse<MeaningOut>
export type DeleteMeaningEndpointApiV1AdminMeaningsMeaningIdDeleteResult = AxiosResponse<unknown>
export type ReadDefinitionsApiV1AdminDefinitionsGetResult = AxiosResponse<DefinitionListResponse>
export type AddDefinitionApiV1AdminDefinitionsPostResult = AxiosResponse<DefinitionOutIds>
export type ReadDefinitionApiV1AdminDefinitionsDefinitionIdGetResult = AxiosResponse<DefinitionOutIds>
export type PatchDefinitionApiV1AdminDefinitionsDefinitionIdPatchResult = AxiosResponse<DefinitionOutIds>
export type DeleteDefinitionEndpointApiV1AdminDefinitionsDefinitionIdDeleteResult = AxiosResponse<unknown>
export type LoginApiV1AuthGoogleLoginGetResult = AxiosResponse<unknown>
export type AuthCallbackApiV1AuthGoogleCallbackGetResult = AxiosResponse<unknown>
